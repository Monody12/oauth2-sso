server:
  port: 9000

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: debug
    org.springframework.security.oauth2: debug
    org.springframework.security.oauth2.server: trace
    org.springframework.security.oauth2.server.authorization: trace

spring:
  datasource:
    url: jdbc:postgresql://1.12.46.222:5432/oauth2_sso?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true
    username: postgres
    password: MyPostgresql1!
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 3
      auto-commit: true
      idle-timeout: 10000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000

mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-delete-value: true
      logic-not-delete-value: false
  type-handlers-package: com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    map-underscore-to-camel-case: true
    default-enum-type-handler: com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler

#spring:
#  datasource:
#    url: jdbc:mysql://1.12.46.222:3306/oauth-demo?useSSL=false
#    username: oauth-demo
#    password: F5tJs7jkA2JPLpW6
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: ${JWK_SET_URI:http://localhost:9000/.well-known/jwks.json}
#      authorizationserver:
#        client:
#          client:
#            registration:
#              client-id: "client"
#              client-secret: "{noop}secret"
#              client-authentication-methods:
#                - "client_secret_basic"
#              authorization-grant-types:
#                - "authorization_code"
#                - "refresh_token"
#              redirect-uris:
#                - "http://localhost:8080/login/oauth2/code/client"
#              post-logout-redirect-uris:
#                - "http://localhost:8080/"
#              scopes:
#                - "openid"
#                - "profile"
#            require-authorization-consent: true